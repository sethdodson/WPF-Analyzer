<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Thinktecture.Runtime.Abstractions</name>
    </assembly>
    <members>
        <member name="T:Thinktecture.Adapters.EventArgsAdapter">
            <summary>Represents the base class for classes that contain event data, and provides a value to use for events that do not include event data. </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Thinktecture.Adapters.EventArgsAdapter.Empty">
            <summary>Provides a value to use with events that do not have event data.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Adapters.EventArgsAdapter.UnsafeConvert">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Adapters.EventArgsAdapter.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Thinktecture.Adapters.EventArgsAdapter"/>.
            </summary>
        </member>
        <member name="M:Thinktecture.Adapters.EventArgsAdapter.#ctor(System.EventArgs)">
            <summary>
            Initializes new instance of <see cref="T:Thinktecture.Adapters.EventArgsAdapter"/>.
            </summary>
            <param name="args">EventArgs to be used by the adapter</param>
        </member>
        <member name="T:Thinktecture.EventArgsExtensions">
            <summary>
            Extensions for <see cref="T:System.EventArgs"/>.
            </summary>
        </member>
        <member name="M:Thinktecture.EventArgsExtensions.ToInterface(System.EventArgs)">
            <summary>
            Converts provided <see cref="T:System.EventArgs"/> to <see cref="T:Thinktecture.IEventArgs"/>.
            </summary>
            <param name="args"><see cref="T:System.EventArgs"/> to convert.</param>
            <returns>An instance of <see cref="T:Thinktecture.IEventArgs"/>.</returns>
        </member>
        <member name="T:Thinktecture.StringBuilderExtensions">
            <summary>
            Extensions for <see cref="T:System.Text.StringBuilder"/>.
            </summary>
        </member>
        <member name="M:Thinktecture.StringBuilderExtensions.ToInterface(System.Text.StringBuilder)">
            <summary>
            Converts provided <see cref="T:System.Text.StringBuilder"/> to <see cref="T:Thinktecture.Text.IStringBuilder"/>.
            </summary>
            <param name="builder"><see cref="T:System.Text.StringBuilder"/> to convert.</param>
            <returns>An instance of <see cref="T:Thinktecture.Text.IStringBuilder"/>.</returns>
        </member>
        <member name="T:Thinktecture.WaitHandleExtensions">
            <summary>
            Extensions for <see cref="T:System.Threading.WaitHandle"/>.
            </summary>
        </member>
        <member name="M:Thinktecture.WaitHandleExtensions.ToInterface(System.Threading.WaitHandle)">
            <summary>
            Converts provided <see cref="T:System.Threading.WaitHandle"/> to <see cref="T:Thinktecture.Threading.IWaitHandle"/>.
            </summary>
            <param name="handle"><see cref="T:System.Threading.WaitHandle"/> to convert.</param>
            <returns>An instance of <see cref="T:Thinktecture.Threading.IWaitHandle"/>.</returns>
        </member>
        <member name="T:Thinktecture.IEventArgs">
            <summary>Represents the base class for classes that contain event data, and provides a value to use for events that do not include event data. </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Thinktecture.Text.Adapters.StringBuilderAdapter">
            <summary>
            Adapter for <see cref="T:System.Text.StringBuilder"/>.
            </summary>
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.UnsafeConvert">
            <inheritdoc />
        </member>
        <member name="P:Thinktecture.Text.Adapters.StringBuilderAdapter.Capacity">
            <inheritdoc />
        </member>
        <member name="P:Thinktecture.Text.Adapters.StringBuilderAdapter.Chars(System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:Thinktecture.Text.Adapters.StringBuilderAdapter.Length">
            <inheritdoc />
        </member>
        <member name="P:Thinktecture.Text.Adapters.StringBuilderAdapter.MaxCapacity">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Thinktecture.Text.Adapters.StringBuilderAdapter" /> class.</summary>
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Thinktecture.Text.Adapters.StringBuilderAdapter" /> class using the specified capacity.</summary>
            <param name="capacity">The suggested starting size of this instance. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity" /> is less than zero. </exception>
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Thinktecture.Text.Adapters.StringBuilderAdapter" /> class that starts with a specified capacity and can grow to a specified maximum.</summary>
            <param name="capacity">The suggested starting size of the <see cref="T:Thinktecture.Text.Adapters.StringBuilderAdapter" />. </param>
            <param name="maxCapacity">The maximum number of characters the current string can contain. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="maxCapacity" /> is less than one, <paramref name="capacity" /> is less than zero, or <paramref name="capacity" /> is greater than <paramref name="maxCapacity" />. </exception>
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Thinktecture.Text.Adapters.StringBuilderAdapter" /> class using the specified string.</summary>
            <param name="value">The string used to initialize the value of the instance. If <paramref name="value" /> is null, the new <see cref="T:Thinktecture.Text.Adapters.StringBuilderAdapter" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />). </param>
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Thinktecture.Text.Adapters.StringBuilderAdapter" /> class using the specified string and capacity.</summary>
            <param name="value">The string used to initialize the value of the instance. If <paramref name="value" /> is null, the new <see cref="T:Thinktecture.Text.Adapters.StringBuilderAdapter" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />). </param>
            <param name="capacity">The suggested starting size of the <see cref="T:Thinktecture.Text.Adapters.StringBuilderAdapter" />. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity" /> is less than zero. </exception>
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Thinktecture.Text.Adapters.StringBuilderAdapter" /> class from the specified substring and capacity.</summary>
            <param name="value">The string that contains the substring used to initialize the value of this instance. If <paramref name="value" /> is null, the new <see cref="T:Thinktecture.Text.Adapters.StringBuilderAdapter" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />). </param>
            <param name="startIndex">The position within <paramref name="value" /> where the substring begins. </param>
            <param name="length">The number of characters in the substring. </param>
            <param name="capacity">The suggested starting size of the <see cref="T:Thinktecture.Text.Adapters.StringBuilderAdapter" />. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity" /> is less than zero.-or- <paramref name="startIndex" /> plus <paramref name="length" /> is not a position within <paramref name="value" />. </exception>
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.#ctor(System.Text.StringBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Thinktecture.Text.Adapters.StringBuilderAdapter" /> class.
            </summary>
            <param name="stringBuilder"><see cref="T:System.Text.StringBuilder"/> to be used by the adapter.</param>
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.Char)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.Char,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.Char[])">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.Char[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.Int16)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.SByte)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.Single)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.String,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Append(System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.AppendFormat(System.String,System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.AppendLine">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.AppendLine(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Clear">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.EnsureCapacity(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Equals(Thinktecture.Text.IStringBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Equals(System.Text.StringBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.Char)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.Char[])">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.Int16)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.SByte)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.Single)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.UInt16)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.UInt32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Insert(System.Int32,System.UInt64)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Remove(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Replace(System.Char,System.Char)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Replace(System.Char,System.Char,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Replace(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.Replace(System.String,System.String,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Text.Adapters.StringBuilderAdapter.ToString(System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Thinktecture.Text.IStringBuilder">
            <summary>Represents a mutable string of characters. This class cannot be inherited.To browse the .NET Framework source code for this type, see the Reference Source.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Thinktecture.Text.IStringBuilder.Capacity">
            <summary>Gets or sets the maximum number of characters that can be contained in the memory allocated by the current instance.</summary>
            <returns>The maximum number of characters that can be contained in the memory allocated by the current instance. Its value can range from <see cref="P:System.Text.StringBuilder.Length" /> to <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than the current length of this instance.-or- The value specified for a set operation is greater than the maximum capacity. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Thinktecture.Text.IStringBuilder.Length">
            <summary>Gets or sets the length of the current <see cref="T:System.Text.StringBuilder" /> object.</summary>
            <returns>The length of this instance.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than zero or greater than <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Thinktecture.Text.IStringBuilder.MaxCapacity">
            <summary>Gets the maximum capacity of this instance.</summary>
            <returns>The maximum number of characters this instance can hold.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Thinktecture.Text.IStringBuilder.Item(System.Int32)">
            <summary>Gets or sets the character at the specified character position in this instance.</summary>
            <returns>The Unicode character at position <paramref name="index" />.</returns>
            <param name="index">The position of the character. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is outside the bounds of this instance while setting a character. </exception>
            <exception cref="T:System.IndexOutOfRangeException">
            <paramref name="index" /> is outside the bounds of this instance while getting a character. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.Boolean)">
            <summary>Appends the string representation of a specified Boolean value to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The Boolean value to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.Byte)">
            <summary>Appends the string representation of a specified 8-bit unsigned integer to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The value to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.Char)">
            <summary>Appends the string representation of a specified Unicode character to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The Unicode character to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.Char,System.Int32)">
            <summary>Appends a specified number of copies of the string representation of a Unicode character to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The character to append. </param>
            <param name="repeatCount">The number of times to append <paramref name="value" />. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="repeatCount" /> is less than zero.-or- Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <exception cref="T:System.OutOfMemoryException">Out of memory.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.Char[])">
            <summary>Appends the string representation of the Unicode characters in a specified array to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The array of characters to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.Char[],System.Int32,System.Int32)">
            <summary>Appends the string representation of a specified subarray of Unicode characters to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">A character array. </param>
            <param name="startIndex">The starting position in <paramref name="value" />. </param>
            <param name="charCount">The number of characters to append. </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> is null, and <paramref name="startIndex" /> and <paramref name="charCount" /> are not zero. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="charCount" /> is less than zero.-or- <paramref name="startIndex" /> is less than zero.-or- <paramref name="startIndex" /> + <paramref name="charCount" /> is greater than the length of <paramref name="value" />.-or- Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.Decimal)">
            <summary>Appends the string representation of a specified decimal number to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The value to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.Double)">
            <summary>Appends the string representation of a specified double-precision floating-point number to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The value to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.Int16)">
            <summary>Appends the string representation of a specified 16-bit signed integer to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The value to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.Int32)">
            <summary>Appends the string representation of a specified 32-bit signed integer to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The value to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.Int64)">
            <summary>Appends the string representation of a specified 64-bit signed integer to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The value to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.Object)">
            <summary>Appends the string representation of a specified object to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The object to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.SByte)">
            <summary>Appends the string representation of a specified 8-bit signed integer to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The value to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.Single)">
            <summary>Appends the string representation of a specified single-precision floating-point number to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The value to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.String)">
            <summary>Appends a copy of the specified string to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The string to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.String,System.Int32,System.Int32)">
            <summary>Appends a copy of a specified substring to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The string that contains the substring to append. </param>
            <param name="startIndex">The starting position of the substring within <paramref name="value" />. </param>
            <param name="count">The number of characters in <paramref name="value" /> to append. </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> is null, and <paramref name="startIndex" /> and <paramref name="count" /> are not zero. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="count" /> less than zero.-or- <paramref name="startIndex" /> less than zero.-or- <paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="value" />.-or- Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.UInt16)">
            <summary>Appends the string representation of a specified 16-bit unsigned integer to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The value to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.UInt32)">
            <summary>Appends the string representation of a specified 32-bit unsigned integer to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The value to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Append(System.UInt64)">
            <summary>Appends the string representation of a specified 64-bit unsigned integer to this instance.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The value to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance. Each format item is replaced by the string representation of a corresponding argument in a parameter array using a specified format provider.</summary>
            <returns>A reference to this instance after the append operation has completed. After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> where any format specification is replaced by the string representation of the corresponding object argument. </returns>
            <param name="provider">An object that supplies culture-specific formatting information. </param>
            <param name="format">A composite format string (see Remarks). </param>
            <param name="args">An array of objects to format.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="format" /> is null. </exception>
            <exception cref="T:System.FormatException">
            <paramref name="format" /> is invalid. -or-The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="args" /> array.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.AppendFormat(System.String,System.Object[])">
            <summary>Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance. Each format item is replaced by the string representation of a corresponding argument in a parameter array.</summary>
            <returns>A reference to this instance with <paramref name="format" /> appended. Each format item in <paramref name="format" /> is replaced by the string representation of the corresponding object argument.</returns>
            <param name="format">A composite format string (see Remarks). </param>
            <param name="args">An array of objects to format. </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="format" /> or <paramref name="args" /> is null. </exception>
            <exception cref="T:System.FormatException">
            <paramref name="format" /> is invalid. -or-The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="args" /> array.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.AppendLine">
            <summary>Appends the default line terminator to the end of the current <see cref="T:System.Text.StringBuilder" /> object.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.AppendLine(System.String)">
            <summary>Appends a copy of the specified string followed by the default line terminator to the end of the current <see cref="T:System.Text.StringBuilder" /> object.</summary>
            <returns>A reference to this instance after the append operation has completed.</returns>
            <param name="value">The string to append. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Clear">
            <summary>Removes all characters from the current <see cref="T:System.Text.StringBuilder" /> instance.</summary>
            <returns>An object whose <see cref="P:System.Text.StringBuilder.Length" /> is 0 (zero).</returns>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
            <summary>Copies the characters from a specified segment of this instance to a specified segment of a destination <see cref="T:System.Char" /> array.</summary>
            <param name="sourceIndex">The starting position in this instance where characters will be copied from. The index is zero-based.</param>
            <param name="destination">The array where characters will be copied.</param>
            <param name="destinationIndex">The starting position in <paramref name="destination" /> where characters will be copied. The index is zero-based.</param>
            <param name="count">The number of characters to be copied.</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="destination" /> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="sourceIndex" />, <paramref name="destinationIndex" />, or <paramref name="count" />, is less than zero.-or-<paramref name="sourceIndex" /> is greater than the length of this instance.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="sourceIndex" /> + <paramref name="count" /> is greater than the length of this instance.-or-<paramref name="destinationIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="destination" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.EnsureCapacity(System.Int32)">
            <summary>Ensures that the capacity of this instance of <see cref="T:System.Text.StringBuilder" /> is at least the specified value.</summary>
            <returns>The new capacity of this instance.</returns>
            <param name="capacity">The minimum capacity to ensure. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="capacity" /> is less than zero.-or- Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Equals(Thinktecture.Text.IStringBuilder)">
            <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
            <returns>true if this instance and <paramref name="sb" /> have equal string, <see cref="P:System.Text.StringBuilder.Capacity" />, and <see cref="P:System.Text.StringBuilder.MaxCapacity" /> values; otherwise, false.</returns>
            <param name="sb">An object to compare with this instance, or null. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Equals(System.Text.StringBuilder)">
            <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
            <returns>true if this instance and <paramref name="sb" /> have equal string, <see cref="P:System.Text.StringBuilder.Capacity" />, and <see cref="P:System.Text.StringBuilder.MaxCapacity" /> values; otherwise, false.</returns>
            <param name="sb">An object to compare with this instance, or null. </param>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.Boolean)">
            <summary>Inserts the string representation of a Boolean value into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The value to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance.</exception>
            <exception cref="T:System.OutOfMemoryException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.Byte)">
            <summary>Inserts the string representation of a specified 8-bit unsigned integer into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The value to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance. </exception>
            <exception cref="T:System.OutOfMemoryException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.Char)">
            <summary>Inserts the string representation of a specified Unicode character into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The value to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance.-or- Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.Char[])">
            <summary>Inserts the string representation of a specified array of Unicode characters into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The character array to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance.-or- Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
            <summary>Inserts the string representation of a specified subarray of Unicode characters into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">A character array. </param>
            <param name="startIndex">The starting index within <paramref name="value" />. </param>
            <param name="charCount">The number of characters to insert. </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> is null, and <paramref name="startIndex" /> and <paramref name="charCount" /> are not zero. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" />, <paramref name="startIndex" />, or <paramref name="charCount" /> is less than zero.-or- <paramref name="index" /> is greater than the length of this instance.-or- <paramref name="startIndex" /> plus <paramref name="charCount" /> is not a position within <paramref name="value" />.-or- Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.Decimal)">
            <summary>Inserts the string representation of a decimal number into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The value to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance. </exception>
            <exception cref="T:System.OutOfMemoryException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.Double)">
            <summary>Inserts the string representation of a double-precision floating-point number into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The value to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance. </exception>
            <exception cref="T:System.OutOfMemoryException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.Int16)">
            <summary>Inserts the string representation of a specified 16-bit signed integer into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The value to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance. </exception>
            <exception cref="T:System.OutOfMemoryException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.Int32)">
            <summary>Inserts the string representation of a specified 32-bit signed integer into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The value to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance. </exception>
            <exception cref="T:System.OutOfMemoryException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.Int64)">
            <summary>Inserts the string representation of a 64-bit signed integer into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The value to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance. </exception>
            <exception cref="T:System.OutOfMemoryException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.Object)">
            <summary>Inserts the string representation of an object into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The object to insert, or null. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance. </exception>
            <exception cref="T:System.OutOfMemoryException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.SByte)">
            <summary>Inserts the string representation of a specified 8-bit signed integer into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The value to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance. </exception>
            <exception cref="T:System.OutOfMemoryException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.Single)">
            <summary>Inserts the string representation of a single-precision floating point number into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The value to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance. </exception>
            <exception cref="T:System.OutOfMemoryException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.String)">
            <summary>Inserts a string into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The string to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the current length of this instance. -or-The current length of this <see cref="T:System.Text.StringBuilder" /> object plus the length of <paramref name="value" /> exceeds <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.String,System.Int32)">
            <summary>Inserts one or more copies of a specified string into this instance at the specified character position.</summary>
            <returns>A reference to this instance after insertion has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The string to insert. </param>
            <param name="count">The number of times to insert <paramref name="value" />. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the current length of this instance.-or- <paramref name="count" /> is less than zero. </exception>
            <exception cref="T:System.OutOfMemoryException">The current length of this <see cref="T:System.Text.StringBuilder" /> object plus the length of <paramref name="value" /> times <paramref name="count" /> exceeds <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.UInt16)">
            <summary>Inserts the string representation of a 16-bit unsigned integer into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The value to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance. </exception>
            <exception cref="T:System.OutOfMemoryException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.UInt32)">
            <summary>Inserts the string representation of a 32-bit unsigned integer into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The value to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance. </exception>
            <exception cref="T:System.OutOfMemoryException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Insert(System.Int32,System.UInt64)">
            <summary>Inserts the string representation of a 64-bit unsigned integer into this instance at the specified character position.</summary>
            <returns>A reference to this instance after the insert operation has completed.</returns>
            <param name="index">The position in this instance where insertion begins. </param>
            <param name="value">The value to insert. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> is less than zero or greater than the length of this instance. </exception>
            <exception cref="T:System.OutOfMemoryException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Remove(System.Int32,System.Int32)">
            <summary>Removes the specified range of characters from this instance.</summary>
            <returns>A reference to this instance after the excise operation has completed.</returns>
            <param name="startIndex">The zero-based position in this instance where removal begins. </param>
            <param name="length">The number of characters to remove. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="startIndex" /> or <paramref name="length" /> is less than zero, or <paramref name="startIndex" /> + <paramref name="length" /> is greater than the length of this instance. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Replace(System.Char,System.Char)">
            <summary>Replaces all occurrences of a specified character in this instance with another specified character.</summary>
            <returns>A reference to this instance with <paramref name="oldChar" /> replaced by <paramref name="newChar" />.</returns>
            <param name="oldChar">The character to replace. </param>
            <param name="newChar">The character that replaces <paramref name="oldChar" />. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
            <summary>Replaces, within a substring of this instance, all occurrences of a specified character with another specified character.</summary>
            <returns>A reference to this instance with <paramref name="oldChar" /> replaced by <paramref name="newChar" /> in the range from <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> -1.</returns>
            <param name="oldChar">The character to replace. </param>
            <param name="newChar">The character that replaces <paramref name="oldChar" />. </param>
            <param name="startIndex">The position in this instance where the substring begins. </param>
            <param name="count">The length of the substring. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of the value of this instance.-or- <paramref name="startIndex" /> or <paramref name="count" /> is less than zero. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Replace(System.String,System.String)">
            <summary>Replaces all occurrences of a specified string in this instance with another specified string.</summary>
            <returns>A reference to this instance with all instances of <paramref name="oldValue" /> replaced by <paramref name="newValue" />.</returns>
            <param name="oldValue">The string to replace. </param>
            <param name="newValue">The string that replaces <paramref name="oldValue" />, or null. </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="oldValue" /> is null. </exception>
            <exception cref="T:System.ArgumentException">The length of <paramref name="oldValue" /> is zero. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
            <summary>Replaces, within a substring of this instance, all occurrences of a specified string with another specified string.</summary>
            <returns>A reference to this instance with all instances of <paramref name="oldValue" /> replaced by <paramref name="newValue" /> in the range from <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> - 1.</returns>
            <param name="oldValue">The string to replace. </param>
            <param name="newValue">The string that replaces <paramref name="oldValue" />, or null. </param>
            <param name="startIndex">The position in this instance where the substring begins. </param>
            <param name="count">The length of the substring. </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="oldValue" /> is null. </exception>
            <exception cref="T:System.ArgumentException">The length of <paramref name="oldValue" /> is zero. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex" /> or <paramref name="count" /> is less than zero.-or- <paramref name="startIndex" /> plus <paramref name="count" /> indicates a character position not within this instance.-or- Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Text.IStringBuilder.ToString(System.Int32,System.Int32)">
            <summary>Converts the value of a substring of this instance to a <see cref="T:System.String" />.</summary>
            <returns>A string whose value is the same as the specified substring of this instance.</returns>
            <param name="startIndex">The starting position of the substring in this instance. </param>
            <param name="length">The length of the substring. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.-or- The sum of <paramref name="startIndex" /> and <paramref name="length" /> is greater than the length of the current instance. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Thinktecture.Threading.Adapters.WaitHandleAdapter">
            <summary>Encapsulates operating system–specific objects that wait for exclusive access to shared resources.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="F:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitTimeout">
            <summary>Indicates that a <see cref="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)" /> operation timed out before any of the wait handles were signaled. This field is constant.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitAll(System.Threading.WaitHandle[])">
            <summary>Waits for all the elements in the specified array to receive a signal.</summary>
            <returns>true when every element in <paramref name="waitHandles" /> has received a signal; otherwise the method never returns.</returns>
            <param name="waitHandles">A WaitHandle array containing the objects for which the current instance will wait. This array cannot contain multiple references to the same object. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null. -or- One or more of the objects in the <paramref name="waitHandles" /> array are null. -or-<paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</exception>
            <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
            <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
            <exception cref="T:System.ApplicationException">
            <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1. </exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait terminated because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitAll(Thinktecture.Threading.IWaitHandle[])">
            <summary>Waits for all the elements in the specified array to receive a signal.</summary>
            <returns>true when every element in <paramref name="waitHandles" /> has received a signal; otherwise the method never returns.</returns>
            <param name="waitHandles">A WaitHandle array containing the objects for which the current instance will wait. This array cannot contain multiple references to the same object. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null. -or- One or more of the objects in the <paramref name="waitHandles" /> array are null. -or-<paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 2.0 or later.</exception>
            <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
            <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
            <exception cref="T:System.ApplicationException">
            <paramref name="waitHandles" /> is an array with no elements and the .NET Framework version is 1.0 or 1.1. </exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait terminated because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitAll(System.Threading.WaitHandle[],System.Int32)">
            <summary>Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval.</summary>
            <returns>true when every element in <paramref name="waitHandles" /> has received a signal; otherwise, false.</returns>
            <param name="waitHandles">A WaitHandle array containing the objects for which the current instance will wait. This array cannot contain multiple references to the same object (duplicates). </param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or- One or more of the objects in the <paramref name="waitHandles" /> array is null. -or-<paramref name="waitHandles" /> is an array with no elements. </exception>
            <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
            <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitAll(Thinktecture.Threading.IWaitHandle[],System.Int32)">
            <summary>Waits for all the elements in the specified array to receive a signal, using an <see cref="T:System.Int32" /> value to specify the time interval.</summary>
            <returns>true when every element in <paramref name="waitHandles" /> has received a signal; otherwise, false.</returns>
            <param name="waitHandles">A WaitHandle array containing the objects for which the current instance will wait. This array cannot contain multiple references to the same object (duplicates). </param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or- One or more of the objects in the <paramref name="waitHandles" /> array is null. -or-<paramref name="waitHandles" /> is an array with no elements. </exception>
            <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
            <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)">
            <summary>Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval.</summary>
            <returns>true when every element in <paramref name="waitHandles" /> has received a signal; otherwise, false.</returns>
            <param name="waitHandles">A WaitHandle array containing the objects for which the current instance will wait. This array cannot contain multiple references to the same object. </param>
            <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null. -or- One or more of the objects in the <paramref name="waitHandles" /> array is null. -or-<paramref name="waitHandles" /> is an array with no elements. </exception>
            <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
            <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out. -or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait terminated because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitAll(Thinktecture.Threading.IWaitHandle[],System.TimeSpan)">
            <summary>Waits for all the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> value to specify the time interval.</summary>
            <returns>true when every element in <paramref name="waitHandles" /> has received a signal; otherwise, false.</returns>
            <param name="waitHandles">A WaitHandle array containing the objects for which the current instance will wait. This array cannot contain multiple references to the same object. </param>
            <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds, to wait indefinitely. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null. -or- One or more of the objects in the <paramref name="waitHandles" /> array is null. -or-<paramref name="waitHandles" /> is an array with no elements. </exception>
            <exception cref="T:System.DuplicateWaitObjectException">In the .NET for Windows Store apps or the Portable Class Library, catch the base class exception, <see cref="T:System.ArgumentException" />, instead.The <paramref name="waitHandles" /> array contains elements that are duplicates. </exception>
            <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits.-or- The <see cref="T:System.STAThreadAttribute" /> attribute is applied to the thread procedure for the current thread, and <paramref name="waitHandles" /> contains more than one element. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out. -or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait terminated because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitAny(System.Threading.WaitHandle[])">
            <summary>Waits for any of the elements in the specified array to receive a signal.</summary>
            <returns>The array index of the object that satisfied the wait.</returns>
            <param name="waitHandles">A WaitHandle array containing the objects for which the current instance will wait. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
            <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
            <exception cref="T:System.ApplicationException">
            <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1. </exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later. </exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitAny(Thinktecture.Threading.IWaitHandle[])">
            <summary>Waits for any of the elements in the specified array to receive a signal.</summary>
            <returns>The array index of the object that satisfied the wait.</returns>
            <param name="waitHandles">A WaitHandle array containing the objects for which the current instance will wait. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
            <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
            <exception cref="T:System.ApplicationException">
            <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 1.0 or 1.1. </exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="waitHandles" /> is an array with no elements, and the .NET Framework version is 2.0 or later. </exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitAny(System.Threading.WaitHandle[],System.Int32)">
            <summary>Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval.</summary>
            <returns>The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</returns>
            <param name="waitHandles">A WaitHandle array containing the objects for which the current instance will wait. </param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
            <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="waitHandles" /> is an array with no elements. </exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitAny(Thinktecture.Threading.IWaitHandle[],System.Int32)">
            <summary>Waits for any of the elements in the specified array to receive a signal, using a 32-bit signed integer to specify the time interval.</summary>
            <returns>The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="millisecondsTimeout" /> has passed.</returns>
            <param name="waitHandles">A WaitHandle array containing the objects for which the current instance will wait. </param>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
            <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="waitHandles" /> is an array with no elements. </exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)">
            <summary>Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</summary>
            <returns>The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</returns>
            <param name="waitHandles">A WaitHandle array containing the objects for which the current instance will wait. </param>
            <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
            <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out. -or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="waitHandles" /> is an array with no elements. </exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitAny(Thinktecture.Threading.IWaitHandle[],System.TimeSpan)">
            <summary>Waits for any of the elements in the specified array to receive a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</summary>
            <returns>The array index of the object that satisfied the wait, or <see cref="F:System.Threading.WaitHandle.WaitTimeout" /> if no object satisfied the wait and a time interval equivalent to <paramref name="timeout" /> has passed.</returns>
            <param name="waitHandles">A WaitHandle array containing the objects for which the current instance will wait. </param>
            <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="waitHandles" /> parameter is null.-or-One or more of the objects in the <paramref name="waitHandles" /> array is null. </exception>
            <exception cref="T:System.NotSupportedException">The number of objects in <paramref name="waitHandles" /> is greater than the system permits. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out. -or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="waitHandles" /> is an array with no elements. </exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="waitHandles" /> array contains a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.UnsafeConvert">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.#ctor(System.Threading.WaitHandle)">
            <summary>
            Initializes new instance of <see cref="T:Thinktecture.Threading.Adapters.WaitHandleAdapter"/>.
            </summary>
            <param name="handle">Handle to be used by the adapter.</param>
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitOne">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitOne(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.WaitOne(System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:Thinktecture.Threading.Adapters.WaitHandleAdapter.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Thinktecture.Threading.IWaitHandle">
            <summary>Encapsulates operating system–specific objects that wait for exclusive access to shared resources.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Thinktecture.Threading.IWaitHandle.WaitOne">
            <summary>Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal.</summary>
            <returns>true if the current instance receives a signal. If the current instance is never signaled, <see cref="M:System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)" /> never returns.</returns>
            <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Thinktecture.Threading.IWaitHandle.WaitOne(System.Int32)">
            <summary>Blocks the current thread until the current <see cref="T:System.Threading.WaitHandle" /> receives a signal, using a 32-bit signed integer to specify the time interval in milliseconds.</summary>
            <returns>true if the current instance receives a signal; otherwise, false.</returns>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" /> (-1) to wait indefinitely. </param>
            <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out. </exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
        </member>
        <member name="M:Thinktecture.Threading.IWaitHandle.WaitOne(System.TimeSpan)">
            <summary>Blocks the current thread until the current instance receives a signal, using a <see cref="T:System.TimeSpan" /> to specify the time interval.</summary>
            <returns>true if the current instance receives a signal; otherwise, false.</returns>
            <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely. </param>
            <exception cref="T:System.ObjectDisposedException">The current instance has already been disposed. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.-or-<paramref name="timeout" /> is greater than <see cref="F:System.Int32.MaxValue" />. </exception>
            <exception cref="T:System.Threading.AbandonedMutexException">The wait completed because a thread exited without releasing a mutex. This exception is not thrown on Windows 98 or Windows Millennium Edition.</exception>
            <exception cref="T:System.InvalidOperationException">The current instance is a transparent proxy for a <see cref="T:System.Threading.WaitHandle" /> in another application domain.</exception>
        </member>
    </members>
</doc>
